# See https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.15
jobs:
  build:
    docker:
      - image: circleci/node:12.6
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm run build
      - run: npm test

      # Store the `./build` directory to be used by subsequent steps; this way we don't risk
      # having the deploy step fail on some npm hiccup or accidentally deploy something different
      # from what's been tested. We build the artifacts once and use the same set throughout.
      - persist_to_workspace:
          root: "."
          paths:
            - build
  upload-source-maps:
    docker:
      - image: circleci/node:12.6
    working_directory: ~/repo
    steps:
      - attach_workspace
          at: "."
      - run: npm run uploadSourceMaps

  deploy-to-prod:
    docker:
      - image: 'cimg/python:3.6'
    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: "."
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --exclude "img/*" \
            --exclude "config/*"
          from: build/
          overwrite: true
          to: 's3://cclcalls.org/'

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - build:
          # We only run this workflow when things are committed to master.
          filters:
            branches:
              only: 
                - sourcemap
      - hold: # Require manual action to pass this step
          type: approval
          requires: ["build"]
      - deploy-to-prod: # Deploys to prod
          requires: ["hold"]
      - upload-source-maps:
          requires: ["deploy-to-prod"]

  pr-build:
    jobs:
      - build:
          # No need to run this on master, since it's covered by the build-and-deploy flow
          filters:
            branches:
              ignore: master
